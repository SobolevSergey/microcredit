//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.04 at 04:17:01 PM MSK 
//


package ru.simplgroupp.xsd.nbki;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the ru.simplgroupp.xsd.nbki package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Product_QNAME = new QName("", "product");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ru.simplgroupp.xsd.nbki
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ProductType }
     * 
     */
    public ProductType createProductType() {
        return new ProductType();
    }

    /**
     * Create an instance of {@link LegalItem }
     * 
     */
    public LegalItem createLegalItem() {
        return new LegalItem();
    }

    /**
     * Create an instance of {@link Phone }
     * 
     */
    public Phone createPhone() {
        return new Phone();
    }

    /**
     * Create an instance of {@link OwnAccount }
     * 
     */
    public OwnAccount createOwnAccount() {
        return new OwnAccount();
    }

    /**
     * Create an instance of {@link Bankruptcy }
     * 
     */
    public Bankruptcy createBankruptcy() {
        return new Bankruptcy();
    }

    /**
     * Create an instance of {@link Account }
     * 
     */
    public Account createAccount() {
        return new Account();
    }

    /**
     * Create an instance of {@link CreditReport }
     * 
     */
    public CreditReport createCreditReport() {
        return new CreditReport();
    }

    /**
     * Create an instance of {@link ConsumerStatement }
     * 
     */
    public ConsumerStatement createConsumerStatement() {
        return new ConsumerStatement();
    }

    /**
     * Create an instance of {@link Employment }
     * 
     */
    public Employment createEmployment() {
        return new Employment();
    }

    /**
     * Create an instance of {@link Banking }
     * 
     */
    public Banking createBanking() {
        return new Banking();
    }

    /**
     * Create an instance of {@link Inquiry }
     * 
     */
    public Inquiry createInquiry() {
        return new Inquiry();
    }

    /**
     * Create an instance of {@link Calculations }
     * 
     */
    public Calculations createCalculations() {
        return new Calculations();
    }

    /**
     * Create an instance of {@link AccountGroupReply }
     * 
     */
    public AccountGroupReply createAccountGroupReply() {
        return new AccountGroupReply();
    }

    /**
     * Create an instance of {@link AccountsGroupTotal }
     * 
     */
    public AccountsGroupTotal createAccountsGroupTotal() {
        return new AccountsGroupTotal();
    }

    /**
     * Create an instance of {@link GroupsType }
     * 
     */
    public GroupsType createGroupsType() {
        return new GroupsType();
    }

    /**
     * Create an instance of {@link ReturnedItem }
     * 
     */
    public ReturnedItem createReturnedItem() {
        return new ReturnedItem();
    }

    /**
     * Create an instance of {@link ClosedForCause }
     * 
     */
    public ClosedForCause createClosedForCause() {
        return new ClosedForCause();
    }

    /**
     * Create an instance of {@link Classification }
     * 
     */
    public Classification createClassification() {
        return new Classification();
    }

    /**
     * Create an instance of {@link History }
     * 
     */
    public History createHistory() {
        return new History();
    }

    /**
     * Create an instance of {@link Decision }
     * 
     */
    public Decision createDecision() {
        return new Decision();
    }

    /**
     * Create an instance of {@link Broker }
     * 
     */
    public Broker createBroker() {
        return new Broker();
    }

    /**
     * Create an instance of {@link AlertMessage }
     * 
     */
    public AlertMessage createAlertMessage() {
        return new AlertMessage();
    }

    /**
     * Create an instance of {@link OfficialInformation }
     * 
     */
    public OfficialInformation createOfficialInformation() {
        return new OfficialInformation();
    }

    /**
     * Create an instance of {@link ProductRequest }
     * 
     */
    public ProductRequest createProductRequest() {
        return new ProductRequest();
    }

    /**
     * Create an instance of {@link Collection }
     * 
     */
    public Collection createCollection() {
        return new Collection();
    }

    /**
     * Create an instance of {@link Business }
     * 
     */
    public Business createBusiness() {
        return new Business();
    }

    /**
     * Create an instance of {@link Subject }
     * 
     */
    public Subject createSubject() {
        return new Subject();
    }

    /**
     * Create an instance of {@link ProductReply }
     * 
     */
    public ProductReply createProductReply() {
        return new ProductReply();
    }

    /**
     * Create an instance of {@link CurrencyCode }
     * 
     */
    public CurrencyCode createCurrencyCode() {
        return new CurrencyCode();
    }

    /**
     * Create an instance of {@link PaymentPattern }
     * 
     */
    public PaymentPattern createPaymentPattern() {
        return new PaymentPattern();
    }

    /**
     * Create an instance of {@link Requestor }
     * 
     */
    public Requestor createRequestor() {
        return new Requestor();
    }

    /**
     * Create an instance of {@link CreditReportRequest }
     * 
     */
    public CreditReportRequest createCreditReportRequest() {
        return new CreditReportRequest();
    }

    /**
     * Create an instance of {@link Error }
     * 
     */
    public Error createError() {
        return new Error();
    }

    /**
     * Create an instance of {@link AddOns }
     * 
     */
    public AddOns createAddOns() {
        return new AddOns();
    }

    /**
     * Create an instance of {@link OwnAccounts }
     * 
     */
    public OwnAccounts createOwnAccounts() {
        return new OwnAccounts();
    }

    /**
     * Create an instance of {@link CreditReportLog }
     * 
     */
    public CreditReportLog createCreditReportLog() {
        return new CreditReportLog();
    }

    /**
     * Create an instance of {@link Address }
     * 
     */
    public Address createAddress() {
        return new Address();
    }

    /**
     * Create an instance of {@link CodeText }
     * 
     */
    public CodeText createCodeText() {
        return new CodeText();
    }

    /**
     * Create an instance of {@link Reference }
     * 
     */
    public Reference createReference() {
        return new Reference();
    }

    /**
     * Create an instance of {@link Id }
     * 
     */
    public Id createId() {
        return new Id();
    }

    /**
     * Create an instance of {@link Person }
     * 
     */
    public Person createPerson() {
        return new Person();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProductType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "product")
    public JAXBElement<ProductType> createProduct(ProductType value) {
        return new JAXBElement<ProductType>(_Product_QNAME, ProductType.class, null, value);
    }

}
