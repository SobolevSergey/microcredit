<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.2.xsd">

    <changeSet id="273" author="Julia">
        <sql>
            ALTER TABLE peoplemisc ADD COLUMN realtyDate_id INTEGER;
            ALTER TABLE peoplemisc ADD CONSTRAINT peoplemisc_realtyDateId FOREIGN KEY (realtyDate_id) REFERENCES reference (id);
        </sql>
    </changeSet>

    <changeSet id="273" author="brinat">
        <sql>
            ALTER TABLE ref_antifraud_rules ADD COLUMN result_join character varying;
            ALTER TABLE ref_antifraud_rules ADD COLUMN entity_alias character varying(10);
            ALTER TABLE ref_antifraud_rules ADD COLUMN result_type character varying;
            ALTER TABLE ref_antifraud_rules ADD COLUMN result_type_alias character varying(10);

            ALTER TABLE ref_antifraud_rules ADD COLUMN parent_id integer;

            ALTER TABLE ref_antifraud_rules
            ADD CONSTRAINT ref_antifraud_rules_parentid_id_fk FOREIGN KEY (parent_id)
            REFERENCES ref_antifraud_rules (id) MATCH SIMPLE
            ON UPDATE NO ACTION ON DELETE CASCADE;

            ALTER TABLE ref_antifraud_rules_params ADD COLUMN group_condition character varying(3);
            ALTER TABLE ref_antifraud_rules_params ADD COLUMN group_index integer;
        </sql>
        <sql>
            <!-- Тот же человек, другой паспорт за последние 30 дней -->
            insert into ref_antifraud_rules (name, entityname, code, isactive, times, check_same_person, include_same_person, result_join, entity_alias, result_type, result_type_alias)
            values ('Тот же человек, другой паспорт за последние 30 дней','ru.simplgroupp.persistence.PeoplePersonalEntity','MA_SPER_DPAS_30', 1, 1, 0, 0, 'de.peopleMainId.peoplepersonal', 'ppe', 'ru.simplgroupp.persistence.DocumentEntity', 'de');

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DPAS_30'), 'isactive', ' and ppe.isactive=:isactive  ', 'активная запись', 'N', 1, 1);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DPAS_30'), 'isactive', ' and de.isactive=:isactive ', 'активная запись', 'N', 1, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DPAS_30'), 'name', ' and ppe.name=:name ', 'имя', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DPAS_30'), 'surname', ' and ppe.surname=:surname ', 'фамилия', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DPAS_30'), 'midname', ' and ppe.midname=:midname ', 'отчество', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DPAS_30'), 'birthdate', ' and ppe.birthdate=:birthdate ', 'день рождения', 'D', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DPAS_30'), 'datechange', ' and de.dateChange>=:datechange ', 'в течении какого времени ищем', 'D', 30, 0);

            <!-- Тот же паспорт, но другой адрес регистрации за последние 90 дней -->
            insert into ref_antifraud_rules (name, entityname, code, isactive, times, check_same_person, include_same_person)
            values ('Тот же паспорт, но другой адрес регистрации за последние 90 дней','ru.simplgroupp.persistence.AddressEntity','MA_SPAS_DRADD', 1, 1, 1, 0);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'addrtype', ' and addrtype.codeinteger=:addrtype ', 'адрес регистрации', 'N', 0, 1);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 0, 0);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'region', ' or region!=:region ', 'регион', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'area', ' or area!=:area ', 'сельский район', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'place', ' or place!=:place ', 'село, деревня', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'city', ' or city!=:city ', 'город', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'street', ' or street!=:street ', 'улица', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'house', ' or house!=:house ', 'дом', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'building', ' or building!=:building ', 'строение', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'corpus', ' or corpus!=:corpus ', 'корпус', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'flat', ' or flat!=:flat ', 'квартира', 'S', 0, 'and', 1);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD'), 'dataend', ' and dataend>=:dataend ', 'дата закрытия', 'D', 90, 0);

            <!-- Тот же паспорт, но другой почтовый индекс адреса регистрации за последние 90 дней -->
            insert into ref_antifraud_rules (name, entityname, code, isactive, times, check_same_person, include_same_person)
            values ('Тот же паспорт, но другой почтовый индекс адреса регистрации за последние 90 дней','ru.simplgroupp.persistence.AddressEntity','MA_SPAS_DRADD_PCODE',1,1,1,0);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD_PCODE'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD_PCODE'), 'addrtype', ' and addrtype.codeinteger=:addrtype ', 'адрес регистрации', 'N', 0, 1);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD_PCODE'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 0, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD_PCODE'), 'index', ' and index!=:index ', 'индекс', 'N', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPAS_DRADD_PCODE'), 'databeg', ' and databeg>=:databeg ', 'дата создания', 'D', 90, 0);

            <!-- Телефон по текущему адресу заемщика такой же, как и рабочий телефон в другом заявлении за последние 60 дней -->
            insert into ref_antifraud_rules (name, entityname, code, isactive, times, check_same_person, include_same_person)
            values ('Телефон по текущему адресу заемщика такой же, как и рабочий телефон в другом заявлении за последние 60 дней','ru.simplgroupp.persistence.PeopleContactEntity','MA_SCTEL_WTEL_60', 1, 1, 0, 0);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SCTEL_WTEL_60'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SCTEL_WTEL_60'), 'contactId', ' and contactId.codeinteger=:contactId ', 'домашний телефон по адресу регистрации', 'N', 5, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SCTEL_WTEL_60'), 'partnersId', ' and partnersId.id=:partnersId ', 'запись сделана клиентом', 'N', 6, 1);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SCTEL_WTEL_60'), 'dateactual', ' and dateactual>=:dateactual ', 'в течении какого времени ищем', 'D', 60, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SCTEL_WTEL_60'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SCTEL_WTEL_60'), 'value', ' and value=:value ', 'номер телефона', 'N', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SCTEL_WTEL_60'), 'partnersId', ' and partnersId.id=:partnersId ', 'запись сделана клиентом', 'N', 6, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SCTEL_WTEL_60'), 'contactId', ' and contactId.codeinteger=:contactId ', 'рабочий телефон', 'N', 4, 0);

            <!-- Домашний телефон встречается более 3 раз за последние 60 дней -->
            insert into ref_antifraud_rules (name, entityname, code, isactive, times, check_same_person, include_same_person)
            values ('Домашний телефон встречается более 3 раз за последние 60 дней','ru.simplgroupp.persistence.PeopleContactEntity','MULT_MA_CTEL', 1, 3, 0, 0);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CTEL'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CTEL'), 'contactId', ' and contactId.codeinteger=:contactId ', 'домашний телефон по адресу регистрации', 'N', 5, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CTEL'), 'partnersId', ' and partnersId.id=:partnersId ', 'запись сделана клиентом', 'N', 6, 1);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CTEL'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CTEL'), 'contactId', ' and contactId.codeinteger=:contactId ', 'домашний телефон по адресу регистрации', 'N', 5, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CTEL'), 'partnersId', ' and partnersId.id=:partnersId ', 'запись сделана клиентом', 'N', 6, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CTEL'), 'dateactual', ' and dateactual>=:dateactual ', 'в течении какого времени ищем', 'D', 60, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CTEL'), 'value', ' and value=:value ', 'номер телефона', 'N', 0);

            <!-- Тот же заемщик (ФИО+ДР), но другой мобильный телефон -->
            insert into ref_antifraud_rules (name, entityname, code, isactive, times, check_same_person, include_same_person)
            values ('Тот же заемщик (ФИО+ДР), но другой мобильный телефон','ru.simplgroupp.persistence.PeopleContactEntity','MA_SPER_DMTEL_60', 1, 1, 1, 0);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DMTEL_60'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DMTEL_60'), 'contactId', ' and contactId.codeinteger=:contactId ', 'мобильный телефон', 'N', 2, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DMTEL_60'), 'partnersId', ' and partnersId.id=:partnersId ', 'запись сделана клиентом', 'N', 6, 1);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DMTEL_60'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 0, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DMTEL_60'), 'contactId', ' and contactId.codeinteger=:contactId ', 'мобильный телефон', 'N', 2, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DMTEL_60'), 'partnersId', ' and partnersId.id=:partnersId ', 'запись сделана клиентом', 'N', 6, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DMTEL_60'), 'value', ' and value=:value ', 'номер телефона', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_DMTEL_60'), 'dateactual', ' and dateactual>=:dateactual ', 'в течении какого времени ищем', 'D', 60, 0);

            <!-- Множественные заявления с использованием того же текущего адреса заемщика, более 3 раз за последние 60 дней -->
            insert into ref_antifraud_rules (name, entityname, code, isactive, times, check_same_person, include_same_person)
            values ('Множественные заявления с использованием того же текущего адреса заемщика, более 3 раз за последние 60 дней','ru.simplgroupp.persistence.AddressEntity','MULT_MA_CADD', 1, 3, 0, 0);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'addrtype', ' and addrtype.codeinteger=:addrtype ', 'адрес регистрации', 'N', 0, 1);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'region', ' and region=:region ', 'регион', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'area', ' and area=:area ', 'сельский район', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'place', ' and place=:place ', 'село, деревня', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'city', ' and city=:city ', 'город', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'street', ' and street=:street ', 'улица', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'house', ' and house=:house ', 'дом', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'building', ' and building=:building ', 'строение', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'corpus', ' and corpus=:corpus ', 'корпус', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'flat', ' and flat=:flat ', 'квартира', 'S', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MULT_MA_CADD'), 'databeg', ' and databeg>=:databeg ', 'дата создания', 'D', 60, 0);

            <!-- Тот же заёмщик, но доход увеличился на 50% за последние 90 дней (мин доход за последние 90 дней из его заявок сравнивается с текущим заявленным) -->
            insert into ref_antifraud_rules (name, entityname, code, isactive, times, check_same_person, include_same_person)
            values ('Тот же заёмщик, но доход увеличился на 50% за последние 90 дней (мин доход за последние 90 дней из его заявок сравнивается с текущим заявленным)','ru.simplgroupp.persistence.EmploymentEntity','MA_SPER_INC50_90', 1, 1, 1, 0);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_INC50_90'), 'current', ' and current=:current ', 'действующая запись', 'N', 1, 1);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_INC50_90'), 'current', ' and current=:current ', 'действующая запись', 'N', 0, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_INC50_90'), 'salary', ' and :salary-((salary/100*50)+salary) >= 0 ', 'доход', 'N', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SPER_INC50_90'), 'dataend', ' and dataend>=:dataend ', 'в течении какого времени ищем', 'D', 90, 0);

            <!-- Рабочий телефон заемщика такой же, как личный телефон (моб. или домашний) в другом заявлении за последние 90 дней -->
            insert into ref_antifraud_rules (name, entityname, code, isactive, times, check_same_person, include_same_person)
            values ('Рабочий телефон заемщика такой же, как личный телефон (моб. или домашний) в другом заявлении за последние 90 дней','ru.simplgroupp.persistence.PeopleContactEntity','MA_SWTEL_HTEL_60', 1, 1, 0, 0);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_HTEL_60'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_HTEL_60'), 'contactId', ' and contactId.codeinteger=:contactId ', 'рабочий телефон', 'N', 4, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_HTEL_60'), 'partnersId', ' and partnersId.id=:partnersId ', 'запись сделана клиентом', 'N', 6, 1);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_HTEL_60'), 'partnersId', ' and partnersId.id=:partnersId ', 'запись сделана клиентом', 'N', 6, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_HTEL_60'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_HTEL_60'), 'mobileId', ' or contactId.codeinteger=:mobileId ', 'мобильный телефон', 'N', 2, 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_HTEL_60'), 'homeId', ' or contactId.codeinteger=:homeId ', 'домашний телефон', 'N', 5, 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_HTEL_60'), 'value', ' and value=:value ', 'номер телефона', 'N', 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_HTEL_60'), 'dateactual', ' and dateactual>=:dateactual ', 'в течении какого времени ищем', 'D', 90, 0);

            <!-- Телефон работодателя заемщика совпадает с телефоном другого работодателя, но с другим адресом -->
            insert into ref_antifraud_rules (name, entityname, code, isactive, times, check_same_person, include_same_person, result_join, entity_alias, result_type, result_type_alias)
            values ('Телефон работодателя заемщика совпадает с телефоном другого работодателя, но с другим адресом','ru.simplgroupp.persistence.PeopleContactEntity','MA_SWTEL_DEMP_DEADD', 1, 1, 0, 0, 'pce.peopleMainId.addresses', 'em', 'ru.simplgroupp.persistence.PeopleContactEntity', 'pce');

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'partnersId', ' and partnersId.id=:partnersId ', 'запись сделана клиентом', 'N', 6, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'contactId', ' and contactId.codeinteger=:contactId ', 'рабочий телефон', 'N', 4, 1);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'value', ' and pce.value=:value ', 'телефон', 'S', 0);

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'region', ' or em.region!=:region ', 'регион', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'area', ' or em.area!=:area ', 'сельский район', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'place', ' or em.place!=:place ', 'село, деревня', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'city', ' or em.city!=:city ', 'город', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'street', ' or em.street!=:street ', 'улица', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'house', ' or em.house!=:house ', 'дом', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'building', ' or em.building!=:building ', 'строение', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'corpus', ' or em.corpus!=:corpus ', 'корпус', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, for_request, group_condition, group_index)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'flat', ' or em.flat!=:flat ', 'квартира', 'S', 0, 'and', 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'addrtype', ' and em.addrtype.codeinteger=:addrtype ', 'рабочий адрес', 'N', 2, 0);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'), 'contactId', ' and pce.contactId.codeinteger=:contactId ', 'рабочий телефон', 'N', 4, 0);

            <!-- Дочернее правило (MA_SWTEL_DEMP_DEADD) для взятия рабочего адреса -->
            insert into ref_antifraud_rules (name, entityname, code, isactive, times, check_same_person, include_same_person, parent_id)
            values ('Дочернее правило (MA_SWTEL_DEMP_DEADD) для взятия рабочего адреса', 'ru.simplgroupp.persistence.AddressEntity','MA_SWTEL_DEMP_DEADD_', 1, 1, 0, 0, (select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD'));

            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD_'), 'isactive', ' and isactive=:isactive ', 'активная запись', 'N', 1, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD_'), 'addrtype', ' and addrtype.codeinteger=:addrtype ', 'рабочий адрес', 'N', 2, 1);
            insert into ref_antifraud_rules_params (rules_id, name, condition, description, datatype, value_integer, for_request)
            values ((select id from ref_antifraud_rules where code = 'MA_SWTEL_DEMP_DEADD_'), 'partnersId', ' and partnersId.id=:partnersId ', 'запись сделана клиентом', 'N', 6, 1);
        </sql>
    </changeSet>
</databaseChangeLog>